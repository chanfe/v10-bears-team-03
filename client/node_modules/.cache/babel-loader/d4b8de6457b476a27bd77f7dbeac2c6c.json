{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Development/project/V10-bears-team-03/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Development/project/V10-bears-team-03/client/src/components/EmailLoginPage.js\";\nimport React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { withFirebase } from '../firebase/context';\n\nconst EmailLoginPageBase = props => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        passwordConfirm = _useState6[0],\n        setPasswordConfirm = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        message = _useState8[0],\n        setMessage = _useState8[1];\n\n  const _useState9 = useState(true),\n        _useState10 = _slicedToArray(_useState9, 2),\n        accountExists = _useState10[0],\n        setAccountExists = _useState10[1];\n\n  const startEmailLogin = e => {\n    e.preventDefault();\n    props.firebase.loginWithEmailAndPassword(email, password).then(() => props.history.push('/form')).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      if (errorCode === 'auth/wrong-password') {\n        alert('Wrong password.');\n      } else {\n        alert(errorMessage);\n      }\n\n      console.log(error);\n    });\n  };\n\n  const startCreateAccount = e => {\n    e.preventDefault();\n\n    if (password !== passwordConfirm) {\n      return setMessage('Passwords do not match');\n    } else {\n      props.firebase.createNewAccount(email, password).then(user => {\n        props.history.push('/form');\n      }).catch(function (error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        if (errorCode == 'auth/weak-password') {\n          alert('The password is too weak.');\n        } else {\n          alert(errorMessage);\n        }\n\n        console.log(error);\n      });\n    }\n  };\n\n  const passwordReset = e => {\n    e.preventDefault();\n\n    if (!email) {\n      alert('Please enter your email address');\n    } else {\n      props.firebase.sendPasswordResetEmail(email).then(function () {\n        setMessage('A password reset link has been sent.  Please check your e-mail.');\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  const displayCreateAccountForm = e => {\n    setAccountExists(false);\n    e.preventDefault();\n    document.getElementById('create-account-button').style.display = 'none';\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"email-login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: accountExists ? startEmailLogin : startCreateAccount,\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"email-form-input\",\n    type: \"email\",\n    placeholder: \"Please enter your email\",\n    onChange: e => {\n      setEmail(e.target.value);\n      setMessage('');\n    },\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"email-form-input\",\n    type: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n      setMessage('');\n    },\n    placeholder: accountExists ? 'Please enter your password' : 'Please choose a password',\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), !accountExists && React.createElement(\"input\", {\n    className: \"email-form-input\",\n    onChange: e => {\n      setPasswordConfirm(e.target.value);\n      setMessage('');\n    },\n    type: \"password\",\n    placeholder: \"Please re-enter your chosen password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"email-submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    id: \"create-account-button\",\n    onClick: displayCreateAccountForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"No account? Create one now.\"), React.createElement(\"button\", {\n    id: \"password-reset-button\",\n    onClick: passwordReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"To reset password, enter e-mail address and click here.\")), message && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, message)));\n};\n\nconst EmailLoginPage = withFirebase(EmailLoginPageBase);\nexport default EmailLoginPage;","map":{"version":3,"sources":["/Users/admin/Development/project/V10-bears-team-03/client/src/components/EmailLoginPage.js"],"names":["React","useState","Navbar","withFirebase","EmailLoginPageBase","props","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","message","setMessage","accountExists","setAccountExists","startEmailLogin","e","preventDefault","firebase","loginWithEmailAndPassword","then","history","push","catch","error","errorCode","code","errorMessage","alert","console","log","startCreateAccount","createNewAccount","user","passwordReset","sendPasswordResetEmail","displayCreateAccountForm","document","getElementById","style","display","target","value","EmailLoginPage"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './Navbar';\nimport { withFirebase } from '../firebase/context';\n\nconst EmailLoginPageBase = props => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [passwordConfirm, setPasswordConfirm] = useState();\n  const [message, setMessage] = useState();\n  const [accountExists, setAccountExists] = useState(true);\n\n  const startEmailLogin = e => {\n    e.preventDefault();\n    props.firebase\n      .loginWithEmailAndPassword(email, password)\n      .then(() => props.history.push('/form'))\n      .catch(function(error) {\n        // Handle Errors here.\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === 'auth/wrong-password') {\n          alert('Wrong password.');\n        } else {\n          alert(errorMessage);\n        }\n        console.log(error);\n      });\n  };\n\n  const startCreateAccount = e => {\n    e.preventDefault();\n    if (password !== passwordConfirm) {\n      return setMessage('Passwords do not match');\n    } else {\n      props.firebase\n        .createNewAccount(email, password)\n        .then(user => {\n          props.history.push('/form');\n        })\n        .catch(function(error) {\n          // Handle Errors here.\n          var errorCode = error.code;\n          var errorMessage = error.message;\n          if (errorCode == 'auth/weak-password') {\n            alert('The password is too weak.');\n          } else {\n            alert(errorMessage);\n          }\n          console.log(error);\n        });\n    }\n  };\n\n  const passwordReset = e => {\n    e.preventDefault();\n    if (!email) {\n      alert('Please enter your email address');\n    } else {\n      props.firebase\n        .sendPasswordResetEmail(email)\n        .then(function() {\n          setMessage(\n            'A password reset link has been sent.  Please check your e-mail.'\n          );\n        })\n        .catch(function(error) {\n          console.log(error);\n        });\n    }\n  };\n\n  const displayCreateAccountForm = e => {\n    setAccountExists(false);\n    e.preventDefault();\n    document.getElementById('create-account-button').style.display = 'none';\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className='email-login-form'>\n        <form\n          onSubmit={accountExists ? startEmailLogin : startCreateAccount}\n          name='email'\n        >\n          <input\n            className='email-form-input'\n            type='email'\n            placeholder='Please enter your email'\n            onChange={e => {\n              setEmail(e.target.value);\n              setMessage('');\n            }}\n            required\n          />\n          <input\n            className='email-form-input'\n            type='password'\n            onChange={e => {\n              setPassword(e.target.value);\n              setMessage('');\n            }}\n            placeholder={\n              accountExists\n                ? 'Please enter your password'\n                : 'Please choose a password'\n            }\n            required\n          />\n          {!accountExists && (\n            <input\n              className='email-form-input'\n              onChange={e => {\n                setPasswordConfirm(e.target.value);\n                setMessage('');\n              }}\n              type='password'\n              placeholder='Please re-enter your chosen password'\n              required\n            />\n          )}\n          <button type='submit' className='email-submit'>\n            Submit\n          </button>\n          <button id='create-account-button' onClick={displayCreateAccountForm}>\n            No account? Create one now.\n          </button>\n\n          <button id='password-reset-button' onClick={passwordReset}>\n            To reset password, enter e-mail address and click here.\n          </button>\n        </form>\n        {message && <p>{message}</p>}\n      </div>\n    </div>\n  );\n};\n\nconst EmailLoginPage = withFirebase(EmailLoginPageBase);\n\nexport default EmailLoginPage;\n"]},"metadata":{},"sourceType":"module"}