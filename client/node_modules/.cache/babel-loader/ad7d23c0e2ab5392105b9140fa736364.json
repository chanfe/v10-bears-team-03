{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Development/project/V10-bears-team-03/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Development/project/V10-bears-team-03/client/src/components/WindowDimensionsProvider.jsx\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nconst WindowDimensionsCtx = createContext(null);\n\nconst WindowDimensionsProvider = ({\n  children\n}) => {\n  const _useState = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        dimensions = _useState2[0],\n        setDimensions = _useState2[1];\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return React.createElement(WindowDimensionsCtx.Provider, {\n    value: dimensions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, children);\n};\n\nexport default WindowDimensionsProvider;\nexport const useWindowDimensions = () => useContext(WindowDimensionsCtx);","map":{"version":3,"sources":["/Users/admin/Development/project/V10-bears-team-03/client/src/components/WindowDimensionsProvider.jsx"],"names":["React","createContext","useContext","useState","useEffect","WindowDimensionsCtx","WindowDimensionsProvider","children","width","window","innerWidth","height","innerHeight","dimensions","setDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,SAArD,QAAsE,OAAtE;AAEA,MAAMC,mBAAmB,GAAGJ,aAAa,CAAC,IAAD,CAAzC;;AAEA,MAAMK,wBAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACXJ,QAAQ,CAAC;AACzCK,IAAAA,KAAK,EAAEC,MAAM,CAACC,UAD2B;AAEzCC,IAAAA,MAAM,EAAEF,MAAM,CAACG;AAF0B,GAAD,CADG;AAAA;AAAA,QACxCC,UADwC;AAAA,QAC5BC,aAD4B;;AAM/CV,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,YAAY,GAAG,MAAM;AACvBD,MAAAA,aAAa,CAAC;AACVN,QAAAA,KAAK,EAAEC,MAAM,CAACC,UADJ;AAEVC,QAAAA,MAAM,EAAEF,MAAM,CAACG;AAFL,OAAD,CAAb;AAIH,KALD;;AAMAH,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAM;AAAEN,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC;AAAmD,KAAlE;AACH,GATQ,EASN,EATM,CAAT;AAUA,SACI,oBAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEF,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,QADL,CADJ;AAKH,CArBD;;AAuBA,eAAeD,wBAAf;AACA,OAAQ,MAAMY,mBAAmB,GAAG,MAAMhB,UAAU,CAACG,mBAAD,CAA5C","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst WindowDimensionsCtx = createContext(null)\n\nconst WindowDimensionsProvider = ({ children }) => {\n    const [dimensions, setDimensions] = useState({\n        width: window.innerWidth,\n        height: window.innerHeight,\n    })\n\n    useEffect(() => {\n        const handleResize = () => {\n            setDimensions({\n                width: window.innerWidth,\n                height: window.innerHeight,\n            })\n        }\n        window.addEventListener('resize', handleResize)\n        return () => { window.removeEventListener('resize', handleResize)}\n    }, [])\n    return (\n        <WindowDimensionsCtx.Provider value={dimensions}>\n            {children}\n        </WindowDimensionsCtx.Provider>\n    )\n}\n\nexport default WindowDimensionsProvider;\nexport  const useWindowDimensions = () => useContext(WindowDimensionsCtx);"]},"metadata":{},"sourceType":"module"}