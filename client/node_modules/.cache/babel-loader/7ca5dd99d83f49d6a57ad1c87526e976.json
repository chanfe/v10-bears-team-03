{"ast":null,"code":"import _defineProperty from \"/Users/admin/Development/project/V10-bears-team-03/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/admin/Development/project/V10-bears-team-03/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Development/project/V10-bears-team-03/client/src/components/AssetsAndFormContainer.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport 'react-dates/initialize';\nimport Navbar from './Navbar';\nimport FormComponent from './FormComponent';\nimport AssetsListComponent from './AssetsListComponent';\nimport { withFirebase } from '../firebase/context';\nimport { fdatasyncSync } from 'fs';\nconst emptyAsset = {\n  name: '',\n  type: '',\n  expire: '',\n  price: '',\n  distance_used: 0,\n  where_purchased: '',\n  date_purchased: null,\n  email: ''\n};\n\nfunction AssetsAndFormContainerBase(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        inventory = _useState2[0],\n        setInventory = _useState2[1];\n\n  const _useState3 = useState(emptyAsset),\n        _useState4 = _slicedToArray(_useState3, 2),\n        asset = _useState4[0],\n        setAsset = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        user_id = _useState6[0],\n        setUser_id = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isUpdating = _useState8[0],\n        setIsUpdating = _useState8[1];\n\n  const fetchAssets = () => {\n    // axios\n    //   .get('/trackers')\n    //   .then(response => {\n    //     const responseAssets = response.data;\n    //     setInventory(responseAssets);\n    //   })\n    //   .catch(error => console.log(error));\n    axios.get(\"/users/\".concat(user_id.user_id)).then(response => {\n      const responseAssets = response.data;\n      let resp_data = responseAssets.UserTrackerGroup.map(async e => {\n        return axios.get(\"/userTrackers/more/\".concat(e));\n      });\n      Promise.all(resp_data).then(res => {\n        let combined = res.map(res => {\n          return res.data;\n        });\n        setInventory(combined);\n      });\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (isUpdating) {\n      console.log(\"update post\", _objectSpread({}, asset, {}, user_id));\n      console.log(asset);\n      axios.post(\"/userTrackers/update/\".concat(asset._id), _objectSpread({}, asset, {}, user_id)).then(response => {\n        //updating the UserTracker too\n        axios.post(\"/trackers/update/\".concat(response.data.tracker_id), _objectSpread({}, asset, {}, user_id)).then(response => {\n          fetchAssets();\n          setIsUpdating(false);\n        }).catch(error => console.log(error));\n      }).catch(error => console.log(error));\n    } else {\n      console.log(\"add post\", _objectSpread({}, asset, {}, user_id));\n      axios.post('/trackers/add', _objectSpread({}, asset, {}, user_id)).then(res => {\n        axios.post('/userTrackers/add', _objectSpread({}, asset, {}, user_id, {\n          tracker_id: res.data._id,\n          distance_used: 0\n        })).then(() => {\n          fetchAssets();\n        }).catch(error => console.log(error));\n      }).catch(error => console.log(error));\n    }\n\n    setAsset(emptyAsset);\n  };\n\n  const onDelete = _id => {\n    axios.delete(\"/userTrackers/delete/\".concat(_id)).then(() => fetchAssets()).catch(error => console.log(error));\n  };\n\n  const onChange = e => {\n    e.persist();\n    setAsset(asset => _objectSpread({}, asset, {\n      [e.target.name]: e.target.value\n    }));\n    console.log(asset);\n  };\n\n  const onDateChange = date_purchased => {\n    setAsset(asset => _objectSpread({}, asset, {\n      date_purchased\n    }));\n  };\n\n  const onUpdate = _id => {\n    setIsUpdating(true);\n    axios.get(\"/userTrackers/\".concat(_id)).then(response => {\n      axios.get(\"/trackers/\".concat(response.data.tracker_id)).then(res => {\n        response.data.date_purchased = moment(response.data.date_purchased);\n        setAsset(_objectSpread({}, res.data, {}, response.data));\n      });\n      console.log(\"check asset onUpdate\", asset);\n    }).catch(error => console.log(error));\n  };\n\n  useEffect(() => {\n    const userEmail = props.firebase.currentUserEmail();\n    axios.post('/users/email', {\n      email: userEmail\n    }).then(response => {\n      let userId = response.data._id;\n      setUser_id(user_id => _objectSpread({}, user_id, {\n        user_id: userId\n      }));\n      console.log(\"check userid\", userId, user_id);\n      axios.get(\"/users/\".concat(userId)).then(response => {\n        const responseAssets = response.data;\n        let resp_data = responseAssets.UserTrackerGroup.map(e => {\n          return axios.get(\"/userTrackers/more/\".concat(e));\n        });\n        Promise.all(resp_data).then(res => {\n          let combined = res.map(res => {\n            return res.data;\n          });\n          setInventory(combined);\n        });\n      });\n    }).catch(error => {\n      let today = new Date();\n      axios.post(\"/users/add\", {\n        email: userEmail,\n        dateCreated: today\n      }).then(response => {\n        //make the user to be the current user\n        axios.post('/users/email', {\n          email: userEmail\n        }).then(resp => {\n          let userId = resp.data._id;\n          setUser_id(user_id => _objectSpread({}, user_id, {\n            user_id: userId\n          }));\n          console.log(\"check userid\", userId, user_id);\n        });\n      }).catch(error => console.log(error));\n    });\n  }, [props.firebase]);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(AssetsListComponent, {\n    assets: inventory,\n    onDelete: onDelete,\n    onUpdate: onUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(FormComponent, {\n    asset: asset,\n    onChange: onChange,\n    onDateChange: onDateChange,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }));\n}\n\nconst AssetsAndFormContainer = withFirebase(AssetsAndFormContainerBase);\nexport default AssetsAndFormContainer;","map":{"version":3,"sources":["/Users/admin/Development/project/V10-bears-team-03/client/src/components/AssetsAndFormContainer.jsx"],"names":["React","useState","useEffect","axios","moment","Navbar","FormComponent","AssetsListComponent","withFirebase","fdatasyncSync","emptyAsset","name","type","expire","price","distance_used","where_purchased","date_purchased","email","AssetsAndFormContainerBase","props","inventory","setInventory","asset","setAsset","user_id","setUser_id","isUpdating","setIsUpdating","fetchAssets","get","then","response","responseAssets","data","resp_data","UserTrackerGroup","map","e","Promise","all","res","combined","onSubmit","preventDefault","console","log","post","_id","tracker_id","catch","error","onDelete","delete","onChange","persist","target","value","onDateChange","onUpdate","userEmail","firebase","currentUserEmail","userId","today","Date","dateCreated","resp","AssetsAndFormContainer"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport 'react-dates/initialize';\n\nimport Navbar from './Navbar';\nimport FormComponent from './FormComponent';\nimport AssetsListComponent from './AssetsListComponent';\nimport { withFirebase } from '../firebase/context';\nimport { fdatasyncSync } from 'fs';\n\nconst emptyAsset = {\n  name: '',\n  type: '',\n  expire: '',\n  price: '',\n  distance_used: 0,\n  where_purchased: '',\n  date_purchased: null,\n  email:''\n};\n\nfunction AssetsAndFormContainerBase(props) {\n  const [inventory, setInventory] = useState([]);\n  const [asset, setAsset] = useState(emptyAsset);\n  const [user_id, setUser_id] = useState(\"\")\n\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const fetchAssets = () => {\n    // axios\n    //   .get('/trackers')\n    //   .then(response => {\n    //     const responseAssets = response.data;\n    //     setInventory(responseAssets);\n    //   })\n    //   .catch(error => console.log(error));\n    \n    axios.get(`/users/${user_id.user_id}`)\n      .then(response => {\n      const responseAssets = response.data;\n\n      let resp_data = responseAssets.UserTrackerGroup.map( async e => {\n        return axios.get(`/userTrackers/more/${e}`)\n      })\n      \n      Promise.all(resp_data).then(res =>{\n        let combined = res.map(res => {\n          return res.data\n        })\n        setInventory(combined)\n      })            \n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (isUpdating) {\n      console.log(\"update post\", {...asset, ...user_id})\n      console.log(asset)\n      axios\n        .post(`/userTrackers/update/${asset._id}`, {...asset, ...user_id})\n        .then(response => {\n          //updating the UserTracker too\n          axios\n          .post(`/trackers/update/${response.data.tracker_id}`, {...asset, ...user_id})\n          .then(response => {\n            fetchAssets();\n            setIsUpdating(false);\n          })\n          .catch(error => console.log(error));\n        })\n        .catch(error => console.log(error));\n      \n    } else {\n      console.log(\"add post\", {...asset, ...user_id})\n      axios.post('/trackers/add', {...asset, ...user_id})\n        .then((res) => {\n          axios\n            .post('/userTrackers/add', {...asset, ...user_id, tracker_id:res.data._id, distance_used:0})\n            .then(() => {\n              fetchAssets();\n            })\n            .catch(error => console.log(error));\n        })\n        .catch(error => console.log(error));\n\n      \n    }\n    setAsset(emptyAsset);\n  };\n\n  const onDelete = _id => {\n    axios\n      .delete(`/userTrackers/delete/${_id}`)\n      .then(() => fetchAssets())\n      .catch(error => console.log(error));\n  };\n\n  const onChange = e => {\n    e.persist();\n    setAsset(asset => ({ ...asset, [e.target.name]: e.target.value }));\n    console.log(asset)\n  };\n\n  const onDateChange = date_purchased => {\n    setAsset(asset => ({ ...asset, date_purchased }));\n  };\n\n  const onUpdate = _id => {\n    setIsUpdating(true);\n\n    axios\n      .get(`/userTrackers/${_id}`)\n      .then(response => {        \n\n        axios.get(`/trackers/${response.data.tracker_id}`)\n          .then(res => {\n            response.data.date_purchased = moment(response.data.date_purchased);\n            setAsset({...res.data, ...response.data});\n            \n            \n          })\n          console.log(\"check asset onUpdate\", asset)\n      })\n      .catch(error => console.log(error));\n    \n  };\n\n  useEffect(() => {\n    const userEmail = props.firebase.currentUserEmail();\n    \n    axios.post('/users/email', {\n      email: userEmail\n      })\n      .then(response => {\n        let userId = response.data._id;\n        \n        setUser_id(user_id => ({ ...user_id, user_id:userId }));\n        console.log(\"check userid\", userId, user_id)\n        axios.get(`/users/${userId}`)\n          .then(response => {\n          const responseAssets = response.data;\n\n          let resp_data = responseAssets.UserTrackerGroup.map( e => {\n            return axios.get(`/userTrackers/more/${e}`)\n          })\n          \n          Promise.all(resp_data).then(res =>{\n            let combined = res.map(res => {\n              return res.data\n            })\n            setInventory(combined)\n          })            \n        });\n      })\n      .catch(error => {\n        let today = new Date();\n        axios.post(`/users/add`, {\n          email: userEmail,\n          dateCreated: today,\n        })\n        .then(response => {\n          //make the user to be the current user\n          axios.post('/users/email', {\n            email: userEmail\n            })\n            .then(resp => {\n              let userId = resp.data._id;\n              setUser_id(user_id => ({ ...user_id, user_id:userId }));\n              console.log(\"check userid\", userId, user_id)\n\n            })\n            \n        })\n        .catch(error => console.log(error));\n      });\n\n    \n\n  }, [props.firebase]);\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      <AssetsListComponent\n        assets={inventory}\n        onDelete={onDelete}\n        onUpdate={onUpdate}\n      />\n      <FormComponent\n        asset={asset}\n        onChange={onChange}\n        onDateChange={onDateChange}\n        onSubmit={onSubmit}\n      />\n    </React.Fragment>\n  );\n}\n\nconst AssetsAndFormContainer = withFirebase(AssetsAndFormContainerBase);\nexport default AssetsAndFormContainer;\n"]},"metadata":{},"sourceType":"module"}